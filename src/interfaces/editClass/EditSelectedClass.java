package interfaces.editClass;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import interfaces.MainFrame;

import java.awt.MenuBar;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.ParallelGroup; 
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.table.DefaultTableModel;

import objects.*;

/**
 *
 * @author Lilong, Brett M. Story
 */
public class EditSelectedClass extends javax.swing.JPanel implements ActionListener {
	private MainFrame parent;
	private MyCourse course;
	private Assignment assignment;
    public String actionStatus = "Closing";
    public DefaultTableModel tableModel;
    
    //private CreateCategory createCategory;
    /**
     * Creates new form ClassRoom
     */
    public EditSelectedClass(MainFrame frame, MyCourse currentCourse) {
        parent = frame;
        course = currentCourse;
        initComponents();
        getEditCurrentClassLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        assignmentTable = new javax.swing.JTable();
        classNameLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        createMenu = new javax.swing.JMenu();
        Category_CreateMenu = new javax.swing.JMenuItem();
        studentMenu = new javax.swing.JMenu();
        addNewStudentMenu = new javax.swing.JMenuItem();
        RemoveStudentMenu = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        assignmentTable.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        assignmentTable.setModel(model);
        assignment = course.getCategories().get(0).getAssignment(0);
        populateTable();
        
        jScrollPane1.setViewportView(assignmentTable);

        classNameLabel.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        classNameLabel.setText(course.getName() + " - " + assignment.getName() + " - " + assignment.getWorth());

        saveButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        saveButton.setText("Save");

        backButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        backButton.setText("Go Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parent.setSimpleModeVisible();
            }
        });
        
        fileMenu.setText("File");

        jMenuItem12.setText("Save");
        fileMenu.add(jMenuItem12);

        jMenuItem13.setText("Load");
        fileMenu.add(jMenuItem13);

        menuBar.add(fileMenu);

        createMenu.setText("Create");

        Category_CreateMenu.setText("Category");
        /*Category_CreateMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Category_CreateMenuActionPerformed(evt);
            }
        });*/
        createMenu.add(Category_CreateMenu);

        menuBar.add(createMenu);

        studentMenu.setText("Student");

        addNewStudentMenu.setText("Add");
        /*addNewStudentMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewStudentMenuActionPerformed(evt);
            }
        });*/
        studentMenu.add(addNewStudentMenu);

        RemoveStudentMenu.setText("Remove");
        /*RemoveStudentMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveStudentMenuActionPerformed(evt);
            }
        });*/
        studentMenu.add(RemoveStudentMenu);

        jMenuItem6.setText("Edit");
        studentMenu.add(jMenuItem6);

        menuBar.add(studentMenu);
        
        for (int i = 0; i < course.getNumberOfAssignmentCategories(); i++) {
        	//FIXME Should have add/remove buttons
        	javax.swing.JMenu categoryMenu = new javax.swing.JMenu();
        	categoryMenu.setText(course.getAssignmentCategory(i).getName());
        	
        	for (int j = 0; j < course.getAssignmentCategory(i).getNumberOfAssignments(); j++) {
        		javax.swing.JMenuItem assignmentMenuItem = new javax.swing.JMenuItem();
        		assignmentMenuItem.setText(course.getAssignmentCategory(i).getAssignment(j).getName());
        		assignmentMenuItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        //assignment = course.getAssignmentCategory(i).getAssignment(j);
                        populateTable();
                    }
                });
        		categoryMenu.add(assignmentMenuItem);   		
        	}
        	menuBar.add(categoryMenu);
        }     
    }// </editor-fold>//GEN-END:initComponents
    
    private void getEditCurrentClassLayout() {
	    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
	    setLayout(layout);
	      
	    layout.setHorizontalGroup(
	        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	        .addGroup(layout.createSequentialGroup()
	            .addContainerGap(72, Short.MAX_VALUE)
	            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
	            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
	            .addComponent(backButton)
	            .addContainerGap(79, Short.MAX_VALUE))
	        .addGroup(layout.createSequentialGroup()
	            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	            .addComponent(classNameLabel)
	            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE))
	      );
	      layout.setVerticalGroup(
	          layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	          .addGroup(layout.createSequentialGroup()
	              .addComponent(classNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
	              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 476, Short.MAX_VALUE)
	              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                  .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                  .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                  .addContainerGap(37, Short.MAX_VALUE)
	                  .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
	                  .addContainerGap(52, Short.MAX_VALUE)))
	      );
    }
    
    private void populateTable() {
    	for (int i = model.getRowCount() - 1; i >= 0; i--) {
    		model.removeRow(i);
    	}
    	for (int i = 0; i < course.getNumberOfStudents(); i++) {
    		model.insertRow(i, new Object[]{ course.getStudent(i).getFullName(), assignment.getGrade(course.getStudent(i).getPseudoName())});
    	}
    }
    /*
    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        addAssignment.setVisible(true);
        if (addAssignment.actionStatus.equals("Add")) {
 
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void Category_CreateMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Category_CreateMenuActionPerformed
        this.setVisible(false);
        CreateCategory createCategory = new CreateCategory(this, true);
        createCategory.setVisible(true);
        if (createCategory.actionStatus.equals("Add")) {
            JMenu newMenu = new JMenu();
            newMenu.setText(createCategory.getCategoryName());
            menuBar.add(newMenu);
        }
        this.setVisible(true);
    }//GEN-LAST:event_Category_CreateMenuActionPerformed

    private void addNewStudentMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewStudentMenuActionPerformed
        this.setVisible(false);
        addStudent.setVisible(true);               
        this.setVisible(true);
    }//GEN-LAST:event_addNewStudentMenuActionPerformed
    
    private void RemoveStudentMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveStudentMenuActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);        
        removeStudent.setVisible(true);
        Object selectedStudent = removeStudent.comboModel.getSelectedItem();
        int removeRow = removeStudent.comboModel.getIndexOf(selectedStudent);
        removeStudent.comboModel.removeElement(selectedStudent);
        tableModel.removeRow(removeRow);
        this.setVisible(true);
        
    }//GEN-LAST:event_RemoveStudentMenuActionPerformed*/
    
    public void setPanelMenu() {
    	parent.setJMenuBar(menuBar);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student", "Grade"
            }
        );
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem Category_CreateMenu;
    private javax.swing.JMenuItem RemoveStudentMenu;
    private javax.swing.JMenuItem addNewStudentMenu;
    private javax.swing.JTable assignmentTable;
    private javax.swing.JMenu createMenu;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel classNameLabel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu studentMenu;
    // End of variables declaration//GEN-END:variables

	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		
	}
}
